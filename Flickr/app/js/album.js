// Generated by CoffeeScript 1.3.3
(function() {
  var app;

  app = angular.module('Album', ['ui', 'ngRoute', 'ngResource']);

  app.constant('SEARCH', {
    term : 'dublin'
  });

  app.config(function($routeProvider, $locationProvider, SEARCH) {

    $routeProvider.when('/pages/:search_term/:page', {
      templateUrl: 'partials/listing.html',
      controller: 'AlbumController',
      resolve: {
        // 'photos' object can be injected in other functions. it's a like declaring a constant
        photos: function ($q, $route, $timeout, $http, $location) {
          var deferred = $q.defer(),
          params = {
            method: 'flickr.photos.search',
            api_key: '2bb0b524a3e3cbb9ceaea74b30dabf93',
            text: $route.current.params.search_term || localStorage.getItem('search_term') || SEARCH.term,
            per_page: 12,
            format: 'json',
            page: $route.current.params.page || 1,
            jsoncallback: 'JSON_CALLBACK'
          };

          var xhr = $http.jsonp('http://api.flickr.com/services/rest/', {
            params: params
          });

          xhr.success(function(data, status, headers, config) {
            var page_info, photos;

            page_info = {
              page : data.photos.page,
              pages : data.photos.pages,
            };

            if ($route.current.params.page > page_info.pages) {
              $location.path("/pages/1/" + $route.current.params.search_term);
            }

            photos = _.map(data.photos.photo, function(photo) {
              return {
                title: photo.title,
                thumb_src: "http://farm" + photo.farm + ".staticflickr.com/" + photo.server + "/" + photo.id + "_" + photo.secret + "_s.jpg",
                src: "http://farm" + photo.farm + ".staticflickr.com/" + photo.server + "/" + photo.id + "_" + photo.secret + ".jpg"
              };
            });

            return deferred.resolve([page_info, photos]);
          });

          return deferred.promise;
        }
      }
    });

    $routeProvider.otherwise({
      redirectTo: "/pages/" + (localStorage.getItem('search_term') || SEARCH.term) + "/1"
    });


  });

  app.controller('AlbumController', function ($scope, $location, $routeParams, photos) {
    var per_page;
    per_page = 12;
    $scope.photos = photos[1];
    $scope.page = photos[0].page;
    $scope.pages = photos[0].pages;
    $scope.end = $scope.page * per_page;
    $scope.start = $scope.end - (per_page - 1);
    $scope.search_term = $routeParams.search_term;
    $scope.q = $scope.search_term;

    $scope.set_current_photo = function(photo) {
      $scope.title = photo.title;
      $scope.current_photo = photo;
      return $scope.current_photo;
    };

    $scope.search = function() {
      localStorage.setItem('search_term', $scope.q);
      return $location.path("pages/" + $scope.q + "/1");
    };

    $scope.next_page = function() {
      if ($scope.page >= $scope.pages) {
        return;
      }
      $location.path("pages/" + $scope.search_term + "/" + ($scope.page + 1));
    };

    $scope.prev_page = function() {
      if ($scope.page <= 1) {
        return;
      }
      $location.path("pages/" + $scope.search_term + "/" + ($scope.page - 1));
    };

    $scope.next_photo = function() {
      var current_photo, next_photo;
      current_photo = $('.thumbnail.active');
      next_photo = current_photo.parent().next('li');
      if (next_photo.length) {
        return $scope.set_current_photo($scope.photos[$('.thumbnails li').index(next_photo)]);
      } else {
        return $scope.next_page();
      }
    };

    $scope.prev_photo = function() {
      var current_photo, prev_photo;
      current_photo = $('.thumbnail.active');
      prev_photo = current_photo.parent().prev('li');
      console.log(prev_photo);
      if (prev_photo.length) {
        return $scope.set_current_photo($scope.photos[$('.thumbnails li').index(prev_photo)]);
      } else {
        return $scope.prev_page();
      }
    };

    $scope.$on('$viewContentLoaded', function() {
      return $('#listing').focus();
    });

    $scope.set_current_photo(_.first($scope.photos));
  });

}).call(this);
